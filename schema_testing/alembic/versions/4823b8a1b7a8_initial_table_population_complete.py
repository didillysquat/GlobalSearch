"""initial table population complete

Revision ID: 4823b8a1b7a8
Revises: 3cf2c4a56b74
Create Date: 2021-08-02 16:10:57.827666

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4823b8a1b7a8'
down_revision = '3cf2c4a56b74'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fragment_photo',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('url', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ncbi_biosample',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('accession', sa.String(length=50), nullable=True),
    sa.Column('sample_name', sa.String(length=100), nullable=False),
    sa.Column('extraction_label', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sequencing_effort_protocol',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('library_type', sa.String(length=50), nullable=False),
    sa.Column('url', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('environment_record',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('record_timestamp', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('turbidity', sa.Numeric(precision=6, scale=3), nullable=True),
    sa.Column('sea_surface_temperature', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('sea_surface_temperature_stdev', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('chlorophyll_a', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('salinity', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('ph', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('dissolved_oxygen', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('mean_monthly_maximum', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('thermall_stress_anomaly_frequency', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('thermal_stress_anomaly_stdev', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('coral_cover', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assay',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('environment_record_id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaign.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['environment_record_id'], ['environment_record.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dive_user',
    sa.Column('dive_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dive_id'], ['dive.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('dive_id', 'user_id')
    )
    op.create_table('calcification_assay',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('assay_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assay_id'], ['assay.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cbass_assay',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('assay_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('stop_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('base_line_temp', sa.Numeric(precision=4, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['assay_id'], ['assay.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fragment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('colony_id', sa.Integer(), nullable=False),
    sa.Column('fragment_photo_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['colony_id'], ['colony.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['fragment_photo_id'], ['fragment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cbass_nucleic_acid_fragment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fragment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['fragment_id'], ['fragment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('heat_stress_profile',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cbass_assay_id', sa.Integer(), nullable=True),
    sa.Column('flow_rate_liters_per_hour', sa.Numeric(precision=6, scale=2), nullable=False),
    sa.Column('light_level', sa.Numeric(precision=6, scale=3), nullable=True),
    sa.Column('tank_volumne_liter', sa.Integer(), nullable=True),
    sa.Column('sea_water_source', sa.String(length=50), nullable=True),
    sa.Column('relative_challenge_temperature', sa.Numeric(precision=2, scale=1), nullable=False),
    sa.ForeignKeyConstraint(['cbass_assay_id'], ['cbass_assay.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sequencing_effort',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fragment_id', sa.Integer(), nullable=False),
    sa.Column('sequencing_effort_protocol_id', sa.Integer(), nullable=True),
    sa.Column('ncbi_biosample_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['fragment_id'], ['fragment.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ncbi_biosample_id'], ['ncbi_biosample.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sequencing_effort_protocol_id'], ['sequencing_effort_protocol.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cbass_assay_fragment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fragment_id', sa.Integer(), nullable=False),
    sa.Column('heat_stress_profile_id', sa.Integer(), nullable=False),
    sa.Column('fragment_number', sa.Integer(), nullable=False),
    sa.Column('fragment_label', sa.String(length=100), nullable=False),
    sa.Column('fv_fm_measurement_one', sa.Numeric(precision=5, scale=3), nullable=True),
    sa.Column('fv_fm_measurement_two', sa.Numeric(precision=5, scale=3), nullable=True),
    sa.Column('relative_sampling_time', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['fragment_id'], ['fragment.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['heat_stress_profile_id'], ['heat_stress_profile.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sequencing_effort_barcode',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sequencing_effort_id', sa.Integer(), nullable=True),
    sa.Column('barcode', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['sequencing_effort_id'], ['sequencing_effort.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sequencing_effort_metagenomic',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sequencing_effort_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sequencing_effort_id'], ['sequencing_effort.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sequencing_effort_rna_seq',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sequencing_effort_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sequencing_effort_id'], ['sequencing_effort.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sequencing_effort_rna_seq')
    op.drop_table('sequencing_effort_metagenomic')
    op.drop_table('sequencing_effort_barcode')
    op.drop_table('cbass_assay_fragment')
    op.drop_table('sequencing_effort')
    op.drop_table('heat_stress_profile')
    op.drop_table('cbass_nucleic_acid_fragment')
    op.drop_table('fragment')
    op.drop_table('cbass_assay')
    op.drop_table('calcification_assay')
    op.drop_table('dive_user')
    op.drop_table('assay')
    op.drop_table('environment_record')
    op.drop_table('sequencing_effort_protocol')
    op.drop_table('ncbi_biosample')
    op.drop_table('fragment_photo')
    # ### end Alembic commands ###
