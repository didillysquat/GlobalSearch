"""init

Revision ID: c31cf795a2aa
Revises: 
Create Date: 2021-08-18 14:32:10.803576

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c31cf795a2aa'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cbass_fragment_photo',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('url', sa.String(length=1000), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('url')
    )
    op.create_table('coral_species',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('phylum_tax', sa.String(length=50), nullable=True),
    sa.Column('class_tax', sa.String(length=50), nullable=True),
    sa.Column('order_tax', sa.String(length=50), nullable=True),
    sa.Column('family_tax', sa.String(length=50), nullable=True),
    sa.Column('genus_tax', sa.String(length=50), nullable=True),
    sa.Column('species_monomial_tax', sa.String(length=50), nullable=True),
    sa.Column('species_binomial_tax', sa.String(length=100), nullable=False),
    sa.Column('ncbi_tax_id', sa.Integer(), nullable=False),
    sa.Column('abbreviation', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('abbreviation'),
    sa.UniqueConstraint('ncbi_tax_id'),
    sa.UniqueConstraint('species_binomial_tax')
    )
    op.create_table('ncbi_biosample',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('accession', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('region',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('abbreviation', sa.String(length=3), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('registration_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('campaign',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('lead_user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('start_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('end_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('ncbi_bio_project_accession', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['lead_user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('ncbi_bio_project_accession')
    )
    op.create_table('site',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('latitude', sa.Numeric(precision=7, scale=5), nullable=False),
    sa.Column('longitude', sa.Numeric(precision=8, scale=5), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('name_abbreviation', sa.String(length=10), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('time_zone', sa.String(length=6), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.Column('country_abbreviation', sa.String(length=2), nullable=True),
    sa.Column('sub_region', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name_abbreviation')
    )
    op.create_table('campaign_user',
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaign.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('campaign_id', 'user_id')
    )
    op.create_table('dive',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('time_in', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('time_out', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('max_depth', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('purpose', sa.String(length=100), nullable=True),
    sa.Column('comments', sa.String(length=1000), nullable=True),
    sa.Column('water_temperature', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('label', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_table('environment_record',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('record_timestamp', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('env_broad_scale', sa.String(length=100), nullable=False),
    sa.Column('env_local_scale', sa.String(length=100), nullable=False),
    sa.Column('env_medium', sa.String(length=100), nullable=False),
    sa.Column('turbidity', sa.Numeric(precision=6, scale=3), nullable=True),
    sa.Column('sea_surface_temperature', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('sea_surface_temperature_stdev', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('chlorophyll_a', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('salinity', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('ph', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('dissolved_oxygen', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('maximum_monthy_mean', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('thermall_stress_anomaly_frequency_stdev', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('coral_cover', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('label', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_table('assay',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('environment_record_id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=200), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaign.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['environment_record_id'], ['environment_record.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dive_user',
    sa.Column('dive_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dive_id'], ['dive.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('dive_id', 'user_id')
    )
    op.create_table('diver_table_photo',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('dive_id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=1000), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['dive_id'], ['dive.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('url')
    )
    op.create_table('assay_user',
    sa.Column('assay_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assay_id'], ['assay.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('assay_id', 'user_id')
    )
    op.create_table('calcification_assay',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['assay.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cbass_assay',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('stop_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('baseline_temp', sa.Numeric(precision=4, scale=2), nullable=False),
    sa.Column('flow_rate', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('light_level', sa.Numeric(precision=6, scale=3), nullable=True),
    sa.Column('tank_volume', sa.Integer(), nullable=True),
    sa.Column('seawater_source', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['assay.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('colony',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('coral_species_id', sa.Integer(), nullable=False),
    sa.Column('dive_id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('time_collected', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('depth_collected', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('assay_id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['assay_id'], ['assay.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['coral_species_id'], ['coral_species.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['dive_id'], ['dive.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('colony_photo',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('colony_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('url', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['colony_id'], ['colony.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('url')
    )
    op.create_table('fragment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('colony_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['colony_id'], ['colony.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('heat_stress_profile',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cbass_assay_id', sa.Integer(), nullable=True),
    sa.Column('relative_challenge_temperature', sa.Numeric(precision=2, scale=1), nullable=False),
    sa.ForeignKeyConstraint(['cbass_assay_id'], ['cbass_assay.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cbass_assay_fragment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('heat_stress_profile_id', sa.Integer(), nullable=True),
    sa.Column('fv_fm_measurement_one_value', sa.Numeric(precision=6, scale=3), nullable=True),
    sa.Column('fv_fm_measurement_one_time_point', sa.Integer(), nullable=True),
    sa.Column('fv_fm_measurement_two_value', sa.Numeric(precision=6, scale=3), nullable=True),
    sa.Column('fv_fm_measurement_two_time_point', sa.Integer(), nullable=True),
    sa.Column('relative_sampling_time', sa.Integer(), nullable=False),
    sa.Column('cbass_fragment_photo_id', sa.Integer(), nullable=True),
    sa.Column('label', sa.String(length=200), nullable=False),
    sa.Column('token_label', sa.String(length=200), nullable=False),
    sa.Column('relative_zoox_loss', sa.Numeric(precision=4, scale=4), nullable=True),
    sa.Column('zoox_loss_method', sa.String(length=30), nullable=True),
    sa.Column('storage_chemical', sa.String(length=100), nullable=True),
    sa.Column('storage_temperature', sa.String(length=20), nullable=True),
    sa.Column('storage_container', sa.String(length=100), nullable=True),
    sa.Column('comments', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['cbass_fragment_photo_id'], ['cbass_fragment_photo.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['heat_stress_profile_id'], ['heat_stress_profile.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id'], ['fragment.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_table('cbass_nucleic_acid_fragment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=200), nullable=False),
    sa.Column('token_label', sa.String(length=200), nullable=False),
    sa.Column('storage_chemical', sa.String(length=100), nullable=True),
    sa.Column('storage_temperature', sa.String(length=20), nullable=True),
    sa.Column('storage_container', sa.String(length=100), nullable=True),
    sa.Column('comments', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['fragment.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_table('sequencing_effort',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fragment_id', sa.Integer(), nullable=False),
    sa.Column('ncbi_biosample_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['fragment_id'], ['fragment.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ncbi_biosample_id'], ['ncbi_biosample.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sequencing_effort_barcode',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('barcode', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['sequencing_effort.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sequencing_effort_metagenomic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['sequencing_effort.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sequencing_effort_rna_seq',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['sequencing_effort.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sequencing_effort_rna_seq')
    op.drop_table('sequencing_effort_metagenomic')
    op.drop_table('sequencing_effort_barcode')
    op.drop_table('sequencing_effort')
    op.drop_table('cbass_nucleic_acid_fragment')
    op.drop_table('cbass_assay_fragment')
    op.drop_table('heat_stress_profile')
    op.drop_table('fragment')
    op.drop_table('colony_photo')
    op.drop_table('colony')
    op.drop_table('cbass_assay')
    op.drop_table('calcification_assay')
    op.drop_table('assay_user')
    op.drop_table('diver_table_photo')
    op.drop_table('dive_user')
    op.drop_table('assay')
    op.drop_table('environment_record')
    op.drop_table('dive')
    op.drop_table('campaign_user')
    op.drop_table('site')
    op.drop_table('campaign')
    op.drop_table('user')
    op.drop_table('region')
    op.drop_table('ncbi_biosample')
    op.drop_table('coral_species')
    op.drop_table('cbass_fragment_photo')
    # ### end Alembic commands ###
